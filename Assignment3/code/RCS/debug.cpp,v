head	1.3;
access;
symbols;
locks;
comment	@// @;


1.3
date	2019.10.22.19.41.48;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.01.25.22.12.59;	author -;	state -;
branches;
next	1.1;

1.1
date	2018.01.25.22.09.09;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: debug.cpp,v 1.2 2018-01-25 14:12:59-08 - - $

#include <climits>
#include <iostream>
using namespace std;

#include "debug.h"
#include "util.h"

debugflags::flagset debugflags::flags {};

void debugflags::setflags (const string& initflags) {
   for (const unsigned char flag: initflags) {
      if (flag == '@@') flags.set();
                  else flags.set (flag, true);
   }
}

// getflag -
//    Check to see if a certain flag is on.

bool debugflags::getflag (char flag) {
   // WARNING: Don't TRACE this function or the stack will blow up.
   return flags.test (static_cast<unsigned char> (flag));
}

void debugflags::where (char flag, const char* file, int line,
                        const char* pretty_function) {
   cout << sys_info::execname() << ": DEBUG(" << flag << ") "
        << file << "[" << line << "] " << endl
        << "   " << pretty_function << endl;
}

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: debug.cpp,v 1.1 2018-01-25 14:09:09-08 - - $
a4 2
#include <vector>

@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: debug.cpp,v 1.11 2018-01-25 14:02:55-08 - - $
d31 1
a31 1
   cout << execname() << ": DEBUG(" << flag << ") "
@
