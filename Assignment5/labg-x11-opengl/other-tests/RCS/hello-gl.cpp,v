head	1.16;
access;
symbols;
locks;
comment	@// @;


1.16
date	2019.02.22.23.57.55;	author -;	state -;
branches;
next	1.15;

1.15
date	2019.02.22.23.37.19;	author -;	state -;
branches;
next	1.14;

1.14
date	2018.08.14.21.31.41;	author -;	state -;
branches;
next	1.13;

1.13
date	2018.08.13.20.35.07;	author -;	state -;
branches;
next	1.12;

1.12
date	2018.08.13.20.34.50;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.08.13.20.34.34;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.08.08.22.50.16;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.08.08.22.47.07;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.08.08.22.46.06;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.08.08.22.44.02;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.08.06.22.08.31;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.08.06.22.08.14;	author -;	state -;
branches;
next	1.4;

1.4
date	2018.08.06.22.06.58;	author -;	state -;
branches;
next	1.3;

1.3
date	2018.08.06.22.06.09;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.08.06.22.05.33;	author -;	state -;
branches;
next	1.1;

1.1
date	2018.08.02.19.59.57;	author -;	state -;
branches;
next	;


desc
@@


1.16
log
@-
@
text
@// $Id: hello-gl.cpp,v 1.15 2019-02-22 15:37:19-08 - - $

// Display text "Hello World" in a window.

#include <iostream>
#include <string>
using namespace std;

#include <GL/freeglut.h>
#include <libgen.h>

// Characteristics of the window.
struct window {
   string name;
   int width {256};
   int height {192};
} window;

void show (const char* func) {
   cout << window.name << ": " << func << " "
        << window.width << "x" << window.height << endl;
}

// Called by glutMainLoop to display window contents.
void display() {
   show (__PRETTY_FUNCTION__);

   // Glut strings use unsigned char instead of signed char.
   static const string hello {"Hello, World"};

   // Pointer to one of the bitmap fonts.
   void* font = GLUT_BITMAP_HELVETICA_18;

   // Width and height in pixels of the bitmap string.
   static auto u_str = reinterpret_cast<const GLubyte*> (hello.c_str());
   int str_width = glutBitmapLength (font, u_str);
   int str_height = glutBitmapHeight (font);

   // Set the background default color and clear the window.
   glClearColor (1.0, 1.0, 0.0, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);

   // Set the color of the letters in the message.
   static const GLubyte BLUE[] = {0, 0, 255};
   glColor3ubv (BLUE);

   // Position (x,y) of the left end and base of the string.
   GLfloat xpos = window.width / 2.0 - str_width / 2.0;
   GLfloat ypos = window.height / 2.0 - str_height / 4.0;

   // Draw the bitmap in the window.
   glRasterPos2f (xpos, ypos);
   glutBitmapString (font, u_str);

   // Swap the passive and active buffers to display the window.
   glutSwapBuffers();
}


void reshape (int width, int height) {
   show (__PRETTY_FUNCTION__);
   window.width = width;
   window.height = height;
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D (0, window.width, 0, window.height);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

int main (int argc, char** argv) {
   window.name = basename (argv[0]);
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutCreateWindow (window.name.c_str());
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutMainLoop();
   return 0;
}

//TEST// mkpspdf hello-gl.ps hello-gl.cpp*

@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.14 2018-08-14 14:31:41-07 - - $
d84 1
a84 1
//TEST// mkpspdf hellogl.ps hellogl.cpp*
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.13 2018-08-13 13:35:07-07 - - $
d83 2
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.11 2018-08-13 13:34:34-07 - - $
d32 1
a32 1
   void* font = GLUT_BITMAP_TIMES_ROMAN_24;
@


1.12
log
@-
@
text
@d45 1
a45 2
   glColor3ubv (GLubyte[] (0,0,255));
   //glColor3ubv (BLUE);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.10 2018-08-08 15:50:16-07 - - $
d45 1
a45 1
   glColor3ubv (const GLubyte[] (0,0,255));
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.9 2018-08-08 15:47:07-07 - - $
d19 1
a19 1
void display (const char* func) {
d26 1
a26 1
   display (__PRETTY_FUNCTION__);
d29 1
a29 1
   static string hello {"Hello, World"};
d35 1
a35 1
   auto u_str = reinterpret_cast<const GLubyte*> (hello.c_str());
d45 2
a46 1
   glColor3ubv (BLUE);
d62 1
a62 1
   display (__PRETTY_FUNCTION__);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.8 2018-08-08 15:46:06-07 - - $
d19 5
d26 1
a26 1
   cout << __PRETTY_FUNCTION__ << "()" << endl;
d61 1
a61 1
   cout << __PRETTY_FUNCTION__ << ": " << width << "x" << height << endl;
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.7 2018-08-08 15:44:02-07 - - $
d56 1
a56 1
   cout << __PRETTY_FUNCTION__ << "(" << width << "," << height << ")" << endl;
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.6 2018-08-06 15:08:31-07 - - $
d35 1
a35 1
   glClearColor (0.75, 0.75, 0.75, 1.0);
d39 2
a40 2
   static const GLubyte BLACK[] = {0x00, 0x00, 0x00};
   glColor3ubv (BLACK);
a44 1
   glRasterPos2f (xpos, ypos);
d47 1
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.5 2018-08-06 15:08:14-07 - - $
d21 1
a21 1
   cout << __func__ << "()" << endl;
d24 1
a24 1
   string hello {"Hello, World"};
d56 1
a56 1
   cout << __func__ << "(" << width << "," << height << ")" << endl;
a66 14
void close() {
   cout << __func__ << "()" << endl;
}

void entry (int state) {
   cout << __func__ << "(";
   switch (state) {
      case GLUT_LEFT: cout << "GLUT_LEFT"; break;
      case GLUT_ENTERED: cout << "GLUT_ENTERED"; break;
      default: cout << state; break;
   }
   cout << ")" << endl;
}

a74 2
   glutEntryFunc (entry);
   glutCloseFunc (close);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.4 2018-08-06 15:06:58-07 - - $
d27 1
a27 1
   void* font = GLUT_BITMAP_9_BY_15;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.3 2018-08-06 15:06:09-07 - - $
d27 1
a27 1
   void* font = GLUT_BITMAP_TIMES_ROMAN_24;
a48 1
   //for (auto ch: hello) glutBitmapCharacter (font, ch);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.2 2018-08-06 15:05:33-07 - - $
d39 2
a40 2
   static const GLubyte GREEN[] = {0x00, 0xFF, 0x00};
   glColor3ubv (GREEN);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.1 2018-08-02 12:59:57-07 - - $
d35 1
a35 1
   glClearColor (0.25, 0.25, 0.25, 1.0);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.31 2016-07-20 20:36:26-07 - - $
d39 1
a39 1
   const GLubyte GREEN[] = {0x00, 0xFF, 0x00};
d62 1
a62 1
   glOrtho (0, window.width, 0, window.height, -1, +1);
@
