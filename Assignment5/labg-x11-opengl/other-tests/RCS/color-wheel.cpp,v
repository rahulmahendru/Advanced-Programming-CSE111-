head	1.25;
access;
symbols;
locks;
comment	@// @;


1.25
date	2019.02.22.23.36.02;	author -;	state -;
branches;
next	1.24;

1.24
date	2018.08.06.21.10.20;	author -;	state -;
branches;
next	1.23;

1.23
date	2018.08.06.21.05.56;	author -;	state -;
branches;
next	1.22;

1.22
date	2018.08.06.21.03.24;	author -;	state -;
branches;
next	1.21;

1.21
date	2018.08.06.21.01.58;	author -;	state -;
branches;
next	1.20;

1.20
date	2018.08.06.21.00.55;	author -;	state -;
branches;
next	1.19;

1.19
date	2018.08.06.21.00.37;	author -;	state -;
branches;
next	1.18;

1.18
date	2018.08.06.20.56.38;	author -;	state -;
branches;
next	1.17;

1.17
date	2018.08.06.20.54.38;	author -;	state -;
branches;
next	1.16;

1.16
date	2018.08.06.20.54.16;	author -;	state -;
branches;
next	1.15;

1.15
date	2018.08.06.20.53.48;	author -;	state -;
branches;
next	1.14;

1.14
date	2018.08.06.20.53.34;	author -;	state -;
branches;
next	1.13;

1.13
date	2018.08.06.20.53.22;	author -;	state -;
branches;
next	1.12;

1.12
date	2018.08.06.20.48.49;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.08.06.20.48.07;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.08.06.20.47.31;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.08.06.20.45.23;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.08.06.20.43.52;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.08.06.20.43.20;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.08.06.20.40.37;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.08.06.20.27.39;	author -;	state -;
branches;
next	1.4;

1.4
date	2018.08.06.20.27.07;	author -;	state -;
branches;
next	1.3;

1.3
date	2018.08.06.20.25.58;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.08.06.20.24.35;	author -;	state -;
branches;
next	1.1;

1.1
date	2018.08.06.20.24.25;	author -;	state -;
branches;
next	;


desc
@@


1.25
log
@-
@
text
@// $Id: color-wheel.cpp,v 1.24 2018-08-06 14:10:20-07 - - $

#include <cmath>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
using namespace std;

#include <GL/freeglut.h>
#include <libgen.h>

// Characteristics of the window.
struct window {
   string name;
   int width {640};
   int height {480};
} window;

const GLubyte WHITE[]   {255, 255, 255};
const GLubyte BLACK[]   {  0,   0,   0};
const GLubyte RED[]     {255,   0,   0};
const GLubyte GREEN[]   {  0, 255,   0};
const GLubyte BLUE[]    {  0,   0, 255};
const GLubyte CYAN[]    {  0, 255, 255};
const GLubyte MAGENTA[] {255,   0, 255};
const GLubyte YELLOW[]  {255, 255,   0};

vector<const GLubyte*> color_wheel {
   YELLOW, RED, MAGENTA, BLUE, CYAN, GREEN,
};

void draw_6th_wedge (GLenum mode, const GLubyte* color,
                     const GLfloat angle, const GLfloat radius) {
   const GLfloat max_angle = angle + M_PI / 3.0;
   const GLfloat delta = M_PI / 30.0;
   glBegin (mode);
   glColor3ubv (color);
   glVertex2f (0.0, 0.0);
   for (GLfloat theta = angle; theta <= max_angle; theta += delta) {
      GLfloat xpos = radius * cos (theta);
      GLfloat ypos = radius * sin (theta);
      glVertex2f (xpos, ypos);
   }
   glEnd();
}

void draw_6th_pie (const GLubyte* color,
                   const GLfloat angle, const GLfloat radius) {
   draw_6th_wedge (GL_POLYGON, color, angle, radius);
   glLineWidth (5.0);
   draw_6th_wedge (GL_LINE_LOOP, BLACK, angle, radius);
}


void display() {
   glClearColor (1.0, 1.0, 1.0, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);

   for (size_t color = 0; color != color_wheel.size(); ++color) {
      draw_6th_pie (color_wheel[color], M_PI / 3.0 * color,
                    min (window.width, window.height) * 0.4);
   }

   glutSwapBuffers();
}

void reshape (int width, int height) {
   window.width = width;
   window.height = height;
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D (- window.width / 2.0, + window.width / 2.0,
               - window.height / 2.0, + window.height / 2.0);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

int main (int argc, char** argv) {
   window.name = basename (argv[0]);
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutCreateWindow (window.name.c_str());
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutMainLoop();
   return 0;
}

//TEST// mkpspdf color-wheel.ps color-wheel.cpp*

@


1.24
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.23 2018-08-06 14:05:56-07 - - $
d91 2
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.22 2018-08-06 14:03:24-07 - - $
d55 1
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.21 2018-08-06 14:01:58-07 - - $
d34 1
a34 1
                   const GLfloat angle, const GLfloat radius) {
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.20 2018-08-06 14:00:55-07 - - $
d51 1
a51 1
   glLineWidth (4.0);
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.19 2018-08-06 14:00:37-07 - - $
d51 1
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.18 2018-08-06 13:56:38-07 - - $
d51 1
a51 1
   draw_6th_wedge (GL_LINE_LOOP, color, angle, radius);
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.17 2018-08-06 13:54:38-07 - - $
d33 1
a33 1
void draw_6th_pie (const GLubyte* color,
d37 1
a37 1
   glBegin (GL_POLYGON);
d46 6
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.16 2018-08-06 13:54:16-07 - - $
d36 1
a36 1
   const GLfloat delta = 2.0 * M_PI / 64.0;
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.15 2018-08-06 13:53:48-07 - - $
d40 1
a40 1
   for (GLfloat theta = angle; theta < max_angle; theta += delta) {
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.14 2018-08-06 13:53:34-07 - - $
d54 1
a54 1
                    min (window.width, window.height) * 0.9);
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.13 2018-08-06 13:53:22-07 - - $
d53 2
a54 2
      draw_pie (color_wheel[color], M_PI / 3.0 * color,
                min (window.width, window.height) * 0.9);
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.12 2018-08-06 13:48:49-07 - - $
d43 1
a43 1
      GLVertex2f (xpos, ypos);
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.11 2018-08-06 13:48:07-07 - - $
d33 4
a36 1
void draw_pie (const GLubyte* color, GLfloat angle) {
d40 5
a44 3
   glVertex2f (0.0, 100.0);
   glVertex2f (100.0, 100.0);
   glVertex2f (100.0, 0);
d53 2
a54 1
      draw_pie (color_wheel[color], M_PI / 3.0 * color);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.10 2018-08-06 13:47:31-07 - - $
d59 2
a60 1
   gluOrtho2D (- window.width / 2.0, + window.width / 2.0, 0, window.height);
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.9 2018-08-06 13:45:23-07 - - $
d59 1
a59 1
   gluOrtho2D (0, window.width, 0, window.height);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.8 2018-08-06 13:43:52-07 - - $
d61 1
a61 2
   glViewport (- window.width, - window.height,
               window.width, window.height);
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.7 2018-08-06 13:43:20-07 - - $
d59 1
a59 2
   gluOrtho2D (- window.width / 2.0, + window.width / 2.0,
               - window.height / 2.0, + window.height / 2.0);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.6 2018-08-06 13:40:37-07 - - $
d62 1
a62 1
   glViewport (window.width / 2.0, window.height / 2.0,
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.5 2018-08-06 13:27:39-07 - - $
d59 2
a60 2
   gluOrtho2D (- window.width / 2, + window.width / 2,
               - window.height / 2, + window.height / 2);
d62 1
a62 1
   glViewport (- window.width / 2, - window.height / 2,
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.4 2018-08-06 13:27:07-07 - - $
d59 2
a60 1
   glOrtho (0, window.width, 0, window.height, -1, +1);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.3 2018-08-06 13:25:58-07 - - $
d40 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.2 2018-08-06 13:24:35-07 - - $
d37 3
a39 3
   glVertex2f (200.0 * cos (angle), 200.0 * sin (angle));
   glVertex2f (200.0 * sin (angle), 200.0 * cos (angle));
   glVertex2f (0.0, 0.0);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: color-wheel.cpp,v 1.1 2018-08-06 13:24:25-07 - - $
d61 1
a61 1
               + window.width / 2, + window.height / 2);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hello-world.cpp,v 1.18 2018-07-30 13:35:21-07 - - $
a65 1
   print_howto();
@
