head	1.15;
access;
symbols;
locks;
comment	@// @;


1.15
date	2019.02.23.03.17.22;	author -;	state -;
branches;
next	1.14;

1.14
date	2019.02.23.01.38.40;	author -;	state -;
branches;
next	1.13;

1.13
date	2019.02.23.01.30.47;	author -;	state -;
branches;
next	1.12;

1.12
date	2018.08.13.21.46.16;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.08.06.22.09.13;	author -;	state -;
branches;
next	1.10;

1.10
date	2016.07.20.20.50.04;	author -;	state -;
branches;
next	1.9;

1.9
date	2016.02.17.22.57.33;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.07.22.23.38.06;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.05.08.21.49.21;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.05.08.05.19.07;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.08.05.18.04;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.08.05.08.06;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.08.04.26.53;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.08.04.26.23;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.08.04.26.06;	author -;	state -;
branches;
next	;


desc
@@


1.15
log
@-
@
text
@// $Id: ellipses.cpp,v 1.14 2019-02-22 17:38:40-08 - - $

// Draw several ellipses in window.

#include <cmath>
#include <iostream>
#include <string>
using namespace std;

#include <GL/freeglut.h>
#include <libgen.h>

// Characteristics of the window.
struct window {
   string name;
   int width {512};
   int height {384};
} window;

const GLubyte RED[] = {0xFF, 0x00, 0x00};
const GLubyte CYAN[] = {0x00, 0xFF, 0xFF};
const GLubyte BLUE[] = {0x00, 0x00, 0xFF};
const GLubyte YELLOW[] = {0xFF, 0xFF, 0x00};

void draw_ellipse (int kind, const GLubyte* color, float scale) {
   glBegin (kind);
   glColor3ubv (color);
   const float delta = 2 * M_PI / 32;
   float width = window.width / 3 * scale;
   float height = window.height / 3 * scale;
   for (float theta = 0; theta < 2 * M_PI; theta += delta) {
      float xpos = width * cos (theta) + window.width / 2;
      float ypos = height * sin (theta) + window.height / 2;
      glVertex2f (xpos, ypos);
   }
   glEnd();
}

// Called by glutMainLoop to display window contents.
void display() {
   cout << __PRETTY_FUNCTION__ << ":" << endl;
   glClearColor (0.25, 0.25, 0.25, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);
   glLineWidth (8);
   draw_ellipse (GL_POLYGON, CYAN, 1.0);
   draw_ellipse (GL_LINE_LOOP, RED, 1.0);
   draw_ellipse (GL_POLYGON, YELLOW, 0.5);
   draw_ellipse (GL_LINE_LOOP, BLUE, 0.5);
   glutSwapBuffers();
}


void reshape (int width, int height) {
   cout << __PRETTY_FUNCTION__ << ": "
        << width << ", " << height << endl;
   window.width = width;
   window.height = height;
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D (0, window.width, 0, window.height);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

int main (int argc, char** argv) {
   window.name = basename (argv[0]);
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutInitWindowPosition (128, 128);
   glutCreateWindow (window.name.c_str());
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutMainLoop();
   return 0;
}

//TEST// mkpspdf ellipses.ps ellipses.cpp*

@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.13 2019-02-22 17:30:47-08 - - $
d44 1
a44 1
   glLineWidth (4);
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.12 2018-08-13 14:46:16-07 - - $
d79 2
a80 1
//TEST// mkpspdf ellipses.ps ellipses.cpp ellipses.cpp.log
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.11 2018-08-06 15:09:13-07 - - $
d79 1
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.10 2016-07-20 13:50:04-07 - - $
a26 1
   glEnable (GL_LINE_SMOOTH);
d41 1
a41 1
   cout << __func__ << "()" << endl;
d54 2
a55 1
   cout << __func__ << "(" << width << "," << height << ")" << endl;
a65 14
void close() {
   cout << __func__ << "()" << endl;
}

void entry (int state) {
   cout << __func__ << "(";
   switch (state) {
      case GLUT_LEFT: cout << "GLUT_LEFT"; break;
      case GLUT_ENTERED: cout << "GLUT_ENTERED"; break;
      default: cout << state; break;
   }
   cout << ")" << endl;
}

a74 2
   glutEntryFunc (entry);
   glutCloseFunc (close);
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.9 2016-02-17 14:57:33-08 - - $
d60 1
a60 1
   glOrtho (0, window.width, 0, window.height, -1, +1);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.8 2014-07-22 16:38:06-07 - - $
a94 1
//TEST// mkpspdf hello-gl.ps hello-gl.cpp*
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.7 2014-05-08 14:49:21-07 - - $
a12 2
using uchar = unsigned char;

d20 4
a23 4
const uchar RED[] = {0xFF, 0x00, 0x00};
const uchar CYAN[] = {0x00, 0xFF, 0xFF};
const uchar BLUE[] = {0x00, 0x00, 0xFF};
const uchar YELLOW[] = {0xFF, 0xFF, 0x00};
d25 1
a25 1
void draw_ellipse (int kind, const uchar* color, float scale) {
@


1.7
log
@-
@
text
@d1 3
a3 1
// $Id: ellipses.cpp,v 1.6 2014-05-07 22:19:07-07 - - $
d13 1
a13 1
typedef unsigned char uchar;
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.5 2014-05-07 22:18:04-07 - - $
d16 2
a17 2
   int width {256};
   int height {192};
d45 1
a45 1
   glLineWidth (5);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.4 2014-05-07 22:08:06-07 - - $
d84 2
a85 1
   //glutInitWindowSize (window.width, window.height);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.3 2014-05-07 21:26:53-07 - - $
d84 1
a84 1
   glutInitWindowSize (window.width, window.height);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.2 2014-05-07 21:26:23-07 - - $
d27 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: ellipses.cpp,v 1.1 2014-05-07 21:26:06-07 - - $
d47 2
a48 2
   draw_ellipse (GL_POLYGON, BLUE, 0.5);
   draw_ellipse (GL_LINE_LOOP, YELLOW, 0.5);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: ellipse.cpp,v 1.5 2014-05-07 18:05:15-07 - - $
d45 2
a46 2
   draw_ellipse (GL_POLYGON, GREEN, 1.0);
   draw_ellipse (GL_LINE_LOOP, CYAN, 1.0);
@
