head	1.17;
access;
symbols;
locks;
comment	@// @;


1.17
date	2019.02.23.01.38.45;	author -;	state -;
branches;
next	1.16;

1.16
date	2019.02.23.01.31.57;	author -;	state -;
branches;
next	1.15;

1.15
date	2019.02.23.01.30.53;	author -;	state -;
branches;
next	1.14;

1.14
date	2018.12.15.00.34.48;	author -;	state -;
branches;
next	1.13;

1.13
date	2018.12.15.00.34.27;	author -;	state -;
branches;
next	1.12;

1.12
date	2018.12.15.00.34.10;	author -;	state -;
branches;
next	1.11;

1.11
date	2018.12.15.00.33.28;	author -;	state -;
branches;
next	1.10;

1.10
date	2018.12.15.00.32.49;	author -;	state -;
branches;
next	1.9;

1.9
date	2018.12.15.00.32.26;	author -;	state -;
branches;
next	1.8;

1.8
date	2018.12.15.00.32.11;	author -;	state -;
branches;
next	1.7;

1.7
date	2018.12.15.00.30.09;	author -;	state -;
branches;
next	1.6;

1.6
date	2018.12.15.00.24.38;	author -;	state -;
branches;
next	1.5;

1.5
date	2018.12.15.00.24.12;	author -;	state -;
branches;
next	1.4;

1.4
date	2018.12.15.00.23.31;	author -;	state -;
branches;
next	1.3;

1.3
date	2018.12.15.00.23.16;	author -;	state -;
branches;
next	1.2;

1.2
date	2018.12.15.00.23.01;	author -;	state -;
branches;
next	1.1;

1.1
date	2018.12.15.00.18.48;	author -;	state -;
branches;
next	;


desc
@@


1.17
log
@-
@
text
@// $Id: squares.cpp,v 1.16 2019-02-22 17:31:57-08 - - $

// Draw a square.

#include <iostream>
#include <string>
using namespace std;

#include <GL/freeglut.h>
#include <libgen.h>

struct {
   string name;
   int width {256};
   int height {256};
} window;

const GLubyte RED[] = {0xFF, 0x00, 0x00};
const GLubyte GREEN[] = {0x00, 0xFF, 0x00};
const GLubyte BLUE[] = {0x00, 0x00, 0xFF};
const GLubyte* colors[] = {RED, GREEN, BLUE};
constexpr size_t colors_size = sizeof colors / sizeof *colors;

void draw_square (GLfloat xpos, GLfloat ypos,
                  GLfloat width, const GLubyte* color) {
   glBegin (GL_POLYGON);
   glColor3ubv (color);
   glVertex2f (xpos, ypos);
   glVertex2f (xpos + width, ypos);
   glVertex2f (xpos + width, ypos + width);
   glVertex2f (xpos, ypos + width);
   glEnd();
}

void display() {
   glClearColor (0.5, 0.5, 0.5, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);
   for (size_t index = 0; index < colors_size; ++index) {
      GLfloat offset = (index + 1) * 0.10;
      GLfloat width = 1 - 2 * offset;
      draw_square (window.width * offset, window.height * offset,
                window.width * width, colors[index]);
   }
   glutSwapBuffers();
}


void reshape (int width, int height) {
   window.width = width;
   window.height = height;
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D (0, window.width, 0, window.height);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

int main (int argc, char** argv) {
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutInitWindowPosition (128, 128);
   glutCreateWindow (basename (argv[0]));
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutMainLoop();
   return 0;
}

//TEST// mkpspdf squares.ps squares.cpp*

@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.15 2019-02-22 17:30:53-08 - - $
d71 2
a72 1
//TEST// mkpspdf squares.ps squares.cpp
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.14 2018-12-14 16:34:48-08 - - $
a40 1
cout << "offset=" << offset << ", width=" << width << endl;
d47 1
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.13 2018-12-14 16:34:27-08 - - $
d71 1
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.12 2018-12-14 16:34:10-08 - - $
d36 1
a36 1
   glClearColor (0.25, 0.25, 0.25, 1.0);
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.11 2018-12-14 16:33:28-08 - - $
d39 1
a39 1
      GLfloat offset = (index + 1) * 0.15;
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.10 2018-12-14 16:32:49-08 - - $
d40 1
a40 1
      GLfloat width = window.width - 2 * offset;
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.9 2018-12-14 16:32:26-08 - - $
d41 1
a41 1
//cout << "offset=" << offset << ", width=" << width << endl;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.8 2018-12-14 16:32:11-08 - - $
d41 1
a41 1
cout << "offset=" << offset << ", width=" << width << endl;
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.7 2018-12-14 16:30:09-08 - - $
d5 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.6 2018-12-14 16:24:38-08 - - $
d39 2
a40 1
      GLfloat width = window.height - 2 * offset;
d42 1
a42 1
                window.height * width, colors[index]);
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.5 2018-12-14 16:24:12-08 - - $
d21 1
d37 6
a42 4
   draw_square (window.width * 0.15, window.height * 0.15,
                window.height * 0.70, RED);
   draw_square (window.width * 0.30, window.height * 0.30,
                window.height * 0.40, GREEN);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.4 2018-12-14 16:23:31-08 - - $
d20 1
a20 1
const GLubyte* colors = {RED, GREEN, BLUE};
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.3 2018-12-14 16:23:16-08 - - $
d20 1
a20 1
const GLubyte* const* colors = {RED, GREEN, BLUE};
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.2 2018-12-14 16:23:01-08 - - $
d20 1
a20 1
const GLubyte* const* const colors = {RED, GREEN, BLUE};
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: squares.cpp,v 1.1 2018-12-14 16:18:48-08 - - $
d20 1
a20 1
const GLUBYTE* const* const colors = {RED, GREEN, BLUE};
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.14 2017-08-08 15:32:23-07 - - $
d19 2
d34 1
a34 1
   glClearColor (0.0, 1.0, 1.0, 1.0);
@
