head	1.3;
access;
symbols;
locks;
comment	@ * @;


1.3
date	2019.03.19.22.53.52;	author -;	state -;
branches;
next	1.2;

1.2
date	2019.02.28.23.24.20;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.07.16.23.47.51;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: rgbcolor.h,v 1.2 2019-02-28 15:24:20-08 - - $

#ifndef __RGBCOLOR_H__
#define __RGBCOLOR_H__

#include <string>
#include <unordered_map>
using namespace std;

#include <GL/freeglut.h>

struct rgbcolor {
   union {
      GLubyte ubvec[3];
      struct {
         GLubyte red {};
         GLubyte green {};
         GLubyte blue {};
      } rgb {};
   };
   explicit rgbcolor() = default;
   explicit rgbcolor (GLubyte red, GLubyte green, GLubyte blue):
               rgb ({red, green,blue}) {};
   explicit rgbcolor (const string&);
   operator string() const;
};

ostream& operator<< (ostream&, const rgbcolor&);

extern const std::unordered_map<std::string,rgbcolor> color_names;

#endif

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: rgbcolor.h,v 1.1 2015-07-16 16:47:51-07 - - $
a24 1
   const GLubyte* ubvec3() { return ubvec; }
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: rgbcolor.h,v 1.1 2015-07-16 16:39:04-07 - - $
d16 4
a19 4
         GLubyte red;
         GLubyte green;
         GLubyte blue;
      };
d21 1
a21 1
   explicit rgbcolor(): red(0), green(0), blue(0) {}
d23 1
a23 1
               red(red), green(green), blue(blue) {}
@
